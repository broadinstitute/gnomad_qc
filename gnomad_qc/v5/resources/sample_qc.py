"""Script containing sample QC related resources."""

from gnomad.resources.resource_utils import TableResource, VersionedTableResource

from gnomad_qc.v5.resources.basics import qc_temp_prefix
from gnomad_qc.v5.resources.constants import (
    AOU_VERSIONS,
    CURRENT_AOU_VERSION,
    CURRENT_SAMPLE_QC_VERSION,
    GNOMAD_BUCKET,
    WORKSPACE_BUCKET,
)


def get_sample_qc_root(
    version: str = CURRENT_SAMPLE_QC_VERSION,
    test: bool = False,
    data_type: str = "genomes",
    data_set: str = "aou",
) -> str:
    """
    Return the root path to sample QC results.

    :param version: Sample QC version (default: CURRENT_SAMPLE_QC_VERSION).
    :param test: If True, use a temporary path (for analysis on test VDS).
    :param data_type: Type of data used (e.g., "genomes").
    :param data_set: Dataset name (e.g., "aou", "hgdp_tgp").
    :return: Path to the sample QC directory.
    """
    if test:
        env = "rwb" if data_set == "aou" else "dataproc"
        base = qc_temp_prefix(version=version, environment=env)
        suffix = f"sample_qc/{data_type}/{data_set}"
        return base + suffix

    if data_set == "aou":
        return f"gs://{WORKSPACE_BUCKET}/v{version}/sample_qc/{data_type}/{data_set}"

    return f"gs://{GNOMAD_BUCKET}/v{version}/sample_qc/{data_type}/{data_set}"


def get_aou_sample_qc(
    strat: str = "all",
    test: bool = False,
) -> VersionedTableResource:
    """
    Get AoU sample QC annotations generated by Hail for the specified stratification.

    Possible values for `strat`:
        - bi_allelic
        - multi_allelic
        - all

    :param strat: Which stratification to return.
    :param test: Whether to use a tmp path for analysis of the test VDS instead of the
        full VDS.
    :return: Sample QC table.
    """
    return VersionedTableResource(
        CURRENT_AOU_VERSION,
        {
            version: TableResource(
                f"{get_sample_qc_root(version, test, data_set='aou')}/hard_filtering/aou.v{version}.sample_qc_all{'' if strat == 'all' else f'_{strat}'}.ht"
            )
            for version in AOU_VERSIONS
        },
    )
